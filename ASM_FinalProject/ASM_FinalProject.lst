Microsoft (R) Macro Assembler Version 14.42.34435.0	    12/13/24 22:42:43
main.asm						     Page 1 - 1


				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 

 = 00000001			playerSize = 1
 = 00000001			gravity = 1
 =-00000005			jumpForce = -5

 00000000			.data
 00000000 50			player BYTE 'P'

 00000001 00000000		outputHandle DWORD 0
 00000005 00000000		bytesWritten DWORD 0
 00000009 00000000		count DWORD 0
 0000000D 000A 0005		playerXY COORD <10,5>
 00000011 0000			velocityY SWORD 0

 00000013 0019			groundLevel WORD 25
 00000015 01			onGround BYTE 1

 00000016 00			escConfirm byte 0

 00000017 00000000		cellsWritten DWORD ?
 0000001B  00000001 [		playerAttributes WORD playerSize DUP(0bh)
	    000B
	   ]

 0000001D 0032			updateInterval WORD 50 ; 100ms each update

 0000001F 00000000		startTime DWORD ?
 00000023 00000000		elapsedTime DWORD ?
 00000027 00000258		timeLimit DWORD 600 ; 600 seconds
 0000002B 0000 0000		TimerXY COORD <0,0>

				;遊戲畫面資料
 0000002F 67 61 6D 65 66	gamescrfile BYTE 'gamefield.txt',0
	   69 65 6C 64 2E
	   74 78 74 00
 0000003D 00000000		gamefilehandle HANDLE ?
 00000041 00000000		gamebytesRead DWORD ?
 00000045 00000000		gamescrBytesWritten DWORD ?

				;初始畫面資料
 00000049  00000DAC [		buffer BYTE 3500 DUP(?)
	    00
	   ]
 00000DF5 73 74 61 72 74	initialscrfile BYTE 'start.txt',0
	   2E 74 78 74 00
 00000DFF 00000000		initialfilehandle HANDLE ?
 00000E03 00000000		initialbytesRead DWORD ?
 00000E07 00000000		initialscrBytesWritten DWORD ?
 00000E0B 00			initialKeyPos Byte 0
 00000E0C 00			initialconfirm Byte 0

 00000E0D 0031 0011		initialStartLeftPos COORD <49,17>
 00000E11 0000003E		initialStartLeftSymbol DWORD '>',0
	   00000000
 00000E19 0049 0011		initialStartRightPos COORD <73,17>
 00000E1D 0000003C		initialStartRightSymbol DWORD '<',0
	   00000000

 00000E25 0031 0017		initialExitLeftPos COORD <49,23>
 00000E29 0000003E		initialExitLeftSymbol DWORD '>',0
	   00000000
 00000E31 0049 0017		initialExitRightPos COORD <73,23>
 00000E35 0000003C		initialExitRightSymbol DWORD '<',0
	   00000000

				;結算畫面資料
 00000E3D 66 69 6E 69 73	endscrfile BYTE 'finish.txt',0
	   68 2E 74 78 74
	   00
 00000E48 00000000		endfilehandle HANDLE ?
 00000E4C 00000000		endbytesRead DWORD ?
 00000E50 00000000		endscrBytesWritten DWORD ?
 00000E54 00			endKeyPos Byte 0
 00000E55 00			endconfirm Byte 0
 00000E56 00000000		endCoinGot DWORD 0
 00000E5A 00000000		endTime DWORD 0
 00000E5E 01			needsRefresh BYTE 1
 00000E5F 00			prevKeyPos BYTE 0

 00000E60 001E 0014		endStartLeftPos COORD <30,20>
 00000E64 0000003E		endStartLeftSymbol DWORD '>',0
	   00000000
 00000E6C 0037 0014		endStartRightPos COORD <55,20>
 00000E70 0000003C		endStartRightSymbol DWORD '<',0
	   00000000

 00000E78 0044 0014		endExitLeftPos COORD <68,20>
 00000E7C 0000003E		endExitLeftSymbol DWORD '>',0
	   00000000
 00000E84 005D 0014		endExitRightPos COORD <93,20>
 00000E88 0000003C		endExitRightSymbol DWORD '<',0
	   00000000
 00000E90 002B 0007		endCoinGotCoord COORD <43,7>
 00000E94 002B 0004		endTimeCoord COORD <43,4>

				;金幣生成資料
 00000E98 00000001		coinSeed DWORD 1
 00000E9C 00			coinRandom byte ?
 00000E9D 0000 0000		coinCoord COORD <0,0>
 00000EA1 00			coinGenerated byte 0
 00000EA2 24			coinSymbol byte '$'
 00000EA3 000E			coinAttribute WORD 0Eh
 00000EA5 00000000		coinGot DWORD 0
 00000EA9 2F 31 35 00		coinOutput db "/15",0
 00000EAD 0001 0002		coinGotCoord1 COORD <1,2>
 00000EB1 0003 0002		coinGotCoord2 COORD <3,2>

 00000000			.code
					SetConsoleOutputCP PROTO STDCALL :DWORD
					GetAsyncKeyState PROTO STDCALL :DWORD
 00000000			main PROC
					;INVOKE SetConsoleOutputCP, 437

					; Get the console ouput handle
					INVOKE GetStdHandle, STD_OUTPUT_HANDLE
 00000007  A3 00000001 R		mov outputHandle, eax	; save console handle

 0000000C			initialLoop:
 0000000C  E8 00000000 E		call Clrscr
 00000011  E8 0000028D			call displayInitialscr
 00000016  E8 000003A4			call readInputInitialscr
 0000001B  80 3D 00000E0C R		cmp Initialconfirm, 1
	   01
 00000022  74 02			je conti
 00000024  EB E6			jmp initialLoop

 00000026			conti:
					INVOKE GetTickCount
 0000002B  A3 0000001F R		mov startTime, eax
 00000030  C6 05 00000016 R		mov escConfirm, 0
	   00
 00000037  C6 05 00000E55 R		mov endConfirm, 0
	   00
					
 0000003E			GameLoop:
 0000003E  E8 00000000 E		call Clrscr
 00000043  E8 000000A7			call updatePhysics
 00000048  E8 00000189			call displayGamescr
 0000004D  E8 00000149			call drawPlayer
 00000052  E8 0000020D			call displayTime
 00000057  E8 00000628			call displayCoinGot
 0000005C  E8 000000D5			call readInput
 00000061  E8 0000054D			call generateCoins
 00000066  80 3D 00000016 R		cmp  escConfirm, 1
	   01
 0000006D  74 11			je endLoop
					invoke Sleep, updateInterval
 0000007E  EB BE			jmp GameLoop

 00000080			endLoop:
 00000080  80 3D 00000E5E R		cmp needsRefresh, 1
	   01
 00000087  74 02			je Refresh
 00000089  EB 18			jmp CheckInput

 0000008B			Refresh:
 0000008B  E8 00000000 E		call Clrscr
 00000090  E8 00000396			call displayEndscr
 00000095  E8 0000063C			call displayEndData
 0000009A  C6 05 00000E5E R		mov needsRefresh, 0
	   00
 000000A1  EB 00			jmp CheckInput

 000000A3			CheckInput:
 000000A3  E8 0000049F			call readInputEndscr
 000000A8  80 3D 00000E55 R		cmp endconfirm, 1
	   01
 000000AF  0F 84 FFFFFF71		je conti
 000000B5  A0 00000E54 R		mov al, endKeyPos
 000000BA  8A 25 00000E5F R		mov ah, prevKeyPos
 000000C0  3A E0			cmp ah, al
 000000C2  74 13			je SkipRefresh
 000000C4  C6 05 00000E5E R		mov needsRefresh, 1
	   01
 000000CB  8A 25 00000E54 R		mov ah, endKeyPos
 000000D1  88 25 00000E5F R		mov prevKeyPos, ah

 000000D7			SkipRefresh:
					invoke Sleep, updateInterval
 000000E6  EB 98			jmp endLoop

					exit
 000000EF			main ENDP

 000000EF			updatePhysics PROC uses eax ebx
				    ; 1. 更新玩家的 Y 座標
 000000F1  66| A1		    mov ax, velocityY
	   00000011 R
 000000F7  66| 01 05		    add playerXY.Y, ax        ; 根據垂直速度更新位置
	   0000000F R

				    ; 2. 應用重力（加速垂直速度）
 000000FE  66| 83 05		    add velocityY, gravity    ; 重力影響：速度越來越快
	   00000011 R 01

				    ; 3. 檢查是否低於地面
 00000106  66| A1		    mov ax, playerXY.Y
	   0000000F R
 0000010C  66| 3B 05		    cmp ax, groundLevel
	   00000013 R
 00000113  7E 1E		    jle EndPhysics            ; 如果未超過地面，跳過地面處理

				    ; 如果超出地面，重置到地面
 00000115  66| A1		    mov ax, groundLevel
	   00000013 R
 0000011B  66| A3		    mov playerXY.Y, ax        ; 將玩家重置到地面
	   0000000F R
 00000121  66| C7 05		    mov velocityY, 0          ; 停止垂直運動
	   00000011 R
	   0000
 0000012A  C6 05 00000015 R	    mov onGround, 1           ; 標記玩家在地面上
	   01
 00000131  EB 00		    jmp EndPhysics

 00000133			EndPhysics:
				    ret
 00000136			updatePhysics ENDP

 00000136			readInput PROC
				    ; 檢查W鍵（向上移動）
				    INVOKE GetAsyncKeyState, 'W'
 0000013D  66| A9 8000		    test ax, 8000h
 00000141  74 1B		    jz CheckA
 00000143  80 3D 00000015 R		cmp onGround, 1
	   01
 0000014A  75 12			jne CheckA
 0000014C  66| B8 0005			mov ax, 5
 00000150  66| 29 05			sub velocityY, ax
	   00000011 R
 00000157  C6 05 00000015 R		mov onGround, 0
	   00

 0000015E			CheckA:
				    ; 檢查A鍵（向左移動）
				    INVOKE GetAsyncKeyState, 'A'
 00000165  66| A9 8000		    test ax, 8000h
 00000169  74 07		    jz CheckD
 0000016B  66| FF 0D		    dec playerXY.X           ; 玩家X座標減少，向左移動
	   0000000D R

 00000172			CheckD:
				    ; 檢查D鍵（向右移動）
				    INVOKE GetAsyncKeyState, 'D'
 00000179  66| A9 8000		    test ax, 8000h
 0000017D  74 07		    jz CheckESC
 0000017F  66| FF 05		    inc playerXY.X           ; 玩家X座標增加，向右移動
	   0000000D R

 00000186			CheckESC:
				    ; 檢查ESC鍵（退出遊戲）
				    INVOKE GetAsyncKeyState, VK_ESCAPE
 0000018D  66| A9 8000		    test ax, 8000h
 00000191  74 07		    jz EndInput
 00000193  C6 05 00000016 R	    mov escConfirm,1
	   01

 0000019A			EndInput:
 0000019A  C3				ret
 0000019B			readInput ENDP

 0000019B			drawPlayer PROC
					INVOKE WriteConsoleOutputAttribute,
					outputHandle, 
					OFFSET playerAttributes,
					playerSize, 
					playerXY,
					OFFSET count

					INVOKE WriteConsoleOutputCharacter,
					outputHandle,
					OFFSET player,
					playerSize,
					playerXY,
					OFFSET count
 000001D5  C3				ret
 000001D6			drawPlayer ENDP

 000001D6			displayGamescr PROC uses eax ebx ecx edx
				    ;打開文字檔案
					INVOKE CreateFile, ADDR gamescrfile, GENERIC_READ, 0, NULL, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, NULL 
 000001F6  A3 0000003D R		mov gamefilehandle, eax

 000001FB			ReadLoop:
					;使用UTF-8編碼，顯示符號
					INVOKE SetConsoleOutputCP, 65001

					;讀取檔案
					INVOKE ReadFile, gamefilehandle, ADDR buffer, SIZEOF buffer, ADDR gamebytesRead, NULL

					;畫面更新及輸出檔案
 00000221  E8 00000000 E		call Clrscr
					INVOKE SetFilePointer, gamefilehandle, 0, NULL, FILE_BEGIN
					INVOKE WriteConsole, outputHandle, ADDR buffer, gamebytesRead, ADDR gamescrBytesWritten, NULL

 00000254			EndDisplay:
					;關閉檔案
				    INVOKE CloseHandle, gamefilehandle
				    ret
 00000264			displayGamescr ENDP

 00000264			displayTime PROC uses eax ebx ecx edx
					INVOKE GetTickCount
 0000026D  2B 05 0000001F R		sub eax, startTime
 00000273  99				cdq
 00000274  BB 000003E8			mov ebx, 1000
 00000279  F7 F3			div ebx
 0000027B  A3 00000023 R		mov elapsedTime, eax
 00000280  A1 00000027 R		mov eax, timeLimit
 00000285  2B 05 00000023 R		sub eax, elapsedTime
 0000028B  A3 00000E5A R		mov endTime, eax

 00000290  B2 01			mov dl, 1
 00000292  B6 01			mov dh, 1
 00000294  E8 00000000 E		call gotoxy
 00000299  E8 00000000 E		call WriteDec
					ret
 000002A3			displayTime ENDP

 000002A3			displayInitialscr PROC uses eax ebx ecx edx
				    ;打開文字檔案
					INVOKE CreateFile, ADDR initialscrfile, GENERIC_READ, 0, NULL, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, NULL 
 000002C3  A3 00000DFF R		mov initialfilehandle, eax

 000002C8			ReadLoop:
					;使用UTF-8編碼，顯示符號
					INVOKE SetConsoleOutputCP, 65001

					;讀取檔案
					INVOKE ReadFile, initialfilehandle, ADDR buffer, SIZEOF buffer, ADDR initialbytesRead, NULL

					;畫面更新及輸出檔案
 000002EE  E8 00000000 E		call Clrscr
					INVOKE SetFilePointer, initialfilehandle, 0, NULL, FILE_BEGIN
					INVOKE WriteConsole, outputHandle, ADDR buffer, initialbytesRead, ADDR initialscrBytesWritten, NULL
 00000321  80 3D 00000E0B R		cmp initialKeyPos, 1
	   01
 00000328  74 3C			je Pos2 

 0000032A			Pos1:
					INVOKE WriteConsoleOutputCharacter,
					outputHandle, 
					OFFSET initialStartLeftSymbol,
					1, 
					initialStartLeftPos,
					OFFSET count

					INVOKE WriteConsoleOutputCharacter,
					outputHandle, 
					OFFSET initialStartRightSymbol,
					1, 
					initialStartRightPos,
					OFFSET count
 00000364  EB 3A			jmp conti

 00000366			Pos2:
					INVOKE WriteConsoleOutputCharacter,
					outputHandle, 
					OFFSET initialExitLeftSymbol,
					1, 
					initialExitLeftPos,
					OFFSET count

					INVOKE WriteConsoleOutputCharacter,
					outputHandle, 
					OFFSET initialExitRightSymbol,
					1, 
					initialExitRightPos,
					OFFSET count

 000003A0			conti:
					INVOKE Sleep, updateInterval

 000003AF			EndDisplay:
					;關閉檔案
				    INVOKE CloseHandle, initialfilehandle
				    ret
 000003BF			displayInitialscr ENDP

 000003BF			readInputInitialscr PROC uses eax ebx ecx edx
					INVOKE GetAsyncKeyState, VK_RETURN
 000003CA  A9 00008000			test eax, 8000h                     
 000003CF  74 21		    jz checkW
 000003D1  80 3D 00000E0B R		cmp initialKeyPos, 0 ;判斷按鍵位置
	   00
 000003D8  74 0C			je confirm
 000003DA  E8 00000000 E		call Clrscr
					INVOKE ExitProcess, 0

 000003E6			confirm:
 000003E6  C6 05 00000E0C R		mov initialconfirm, 1
	   01
					ret

 000003F2			checkW:
					INVOKE GetAsyncKeyState, 'W'
 000003F9  A9 00008000			test eax, 8000h                     
 000003FE  74 0C		    jz checkS
 00000400  C6 05 00000E0B R		mov initialKeyPos, 0
	   00
					ret

 0000040C			checkS:
					INVOKE GetAsyncKeyState, 'S'
 00000413  A9 00008000			test eax, 8000h                     
 00000418  74 0C		    jz no_key_pressed
 0000041A  C6 05 00000E0B R		mov initialKeyPos, 1
	   01
					ret

 00000426			no_key_pressed:
					ret
 0000042B			readInputInitialscr ENDP

 0000042B			displayEndscr PROC uses eax ebx ecx edx
				    ;打開文字檔案
					INVOKE CreateFile, ADDR endscrfile, GENERIC_READ, 0, NULL, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, NULL 
 0000044B  A3 00000E48 R		mov endfilehandle, eax

 00000450			ReadLoop:
					;使用UTF-8編碼，顯示符號
					INVOKE SetConsoleOutputCP, 65001

					;讀取檔案
					INVOKE ReadFile, endfilehandle, ADDR buffer, SIZEOF buffer, ADDR endbytesRead, NULL

					;畫面更新及輸出檔案
 00000476  E8 00000000 E		call Clrscr
					INVOKE SetFilePointer, endfilehandle, 0, NULL, FILE_BEGIN
					INVOKE WriteConsole, outputHandle, ADDR buffer, endbytesRead, ADDR endscrBytesWritten, NULL
 000004A9  80 3D 00000E54 R		cmp endKeyPos, 1
	   01
 000004B0  74 3C			je Pos2 

 000004B2			Pos1:
					INVOKE WriteConsoleOutputCharacter,
					outputHandle, 
					OFFSET endStartLeftSymbol,
					1, 
					endStartLeftPos,
					OFFSET count

					INVOKE WriteConsoleOutputCharacter,
					outputHandle, 
					OFFSET endStartRightSymbol,
					1, 
					endStartRightPos,
					OFFSET count
 000004EC  EB 3A			jmp conti

 000004EE			Pos2:
					INVOKE WriteConsoleOutputCharacter,
					outputHandle, 
					OFFSET endExitLeftSymbol,
					1, 
					endExitLeftPos,
					OFFSET count

					INVOKE WriteConsoleOutputCharacter,
					outputHandle, 
					OFFSET endExitRightSymbol,
					1, 
					endExitRightPos,
					OFFSET count

 00000528			conti:
					INVOKE Sleep, updateInterval

 00000537			EndDisplay:
					;關閉檔案
				    INVOKE CloseHandle, endfilehandle
				    ret
 00000547			displayEndscr ENDP

 00000547			readInputEndscr PROC uses eax ebx ecx edx
					INVOKE GetAsyncKeyState, VK_RETURN
 00000552  A9 00008000			test eax, 8000h                     
 00000557  74 21		    jz checkA
 00000559  80 3D 00000E54 R		cmp endKeyPos, 0 ;判斷按鍵位置
	   00
 00000560  74 0C			je confirm
 00000562  E8 00000000 E		call Clrscr
					INVOKE ExitProcess, 0

 0000056E			confirm:
 0000056E  C6 05 00000E55 R		mov endconfirm, 1
	   01
					ret

 0000057A			checkA:
					INVOKE GetAsyncKeyState, 'A'
 00000581  A9 00008000			test eax, 8000h                     
 00000586  74 0C		    jz checkD
 00000588  C6 05 00000E54 R		mov endKeyPos, 0
	   00
					ret

 00000594			checkD:
					INVOKE GetAsyncKeyState, 'D'
 0000059B  A9 00008000			test eax, 8000h                     
 000005A0  74 0C		    jz no_key_pressed
 000005A2  C6 05 00000E54 R		mov endKeyPos, 1
	   01
					ret

 000005AE			no_key_pressed:
					ret
 000005B3			readInputEndscr ENDP

 000005B3			generateCoins PROC uses eax ebx ecx edx
 000005B7  80 3D 00000EA1 R		cmp coinGenerated, 1
	   01
 000005BE  0F 84 00000081		je output
 000005C4  A1 00000E98 R		mov eax, coinSeed
 000005C9  B9 00000005			mov ecx, 5
 000005CE  33 D2			xor edx,edx
 000005D0  F7 F1			div ecx
 000005D2  01 05 00000E98 R		add coinSeed, eax 
 000005D8  83 3D 00000E98 R		cmp coinSeed, 1
	   01
 000005DF  74 14			je Pos1
 000005E1  80 3D 00000E9C R		cmp coinRandom, 2
	   02
 000005E8  74 1F			je Pos2
 000005EA  80 3D 00000E9C R		cmp coinRandom, 3
	   03
 000005F1  74 2A			je Pos3
 000005F3  EB 3C			jmp Pos4

 000005F5			Pos1:
 000005F5  66| C7 05			mov coinCoord.x, 15
	   00000E9D R
	   000F
 000005FE  66| C7 05			mov coinCoord.y, 2
	   00000E9F R
	   0002
 00000607  EB 3C			jmp output

 00000609			Pos2:
 00000609  66| C7 05			mov coinCoord.x, 90
	   00000E9D R
	   005A
 00000612  66| C7 05			mov coinCoord.y, 3
	   00000E9F R
	   0003
 0000061B  EB 28			jmp output

 0000061D			Pos3:
 0000061D  66| C7 05			mov coinCoord.x, 40
	   00000E9D R
	   0028
 00000626  66| C7 05			mov coinCoord.y, 17
	   00000E9F R
	   0011
 0000062F  EB 14			jmp output

 00000631			Pos4:
 00000631  66| C7 05			mov coinCoord.x, 98
	   00000E9D R
	   0062
 0000063A  66| C7 05			mov coinCoord.y, 18
	   00000E9F R
	   0012
 00000643  EB 00			jmp output

 00000645			output:
					INVOKE WriteConsoleOutputCharacter,
					outputHandle,
					OFFSET coinSymbol,
					1,
					coinCoord,
					OFFSET count

					INVOKE WriteConsoleOutputAttribute,
					outputHandle, 
					OFFSET coinAttribute,
					1, 
					coinCoord,
					OFFSET count
					ret
 00000684			generateCoins ENDP

 00000684			displayCoinGot PROC uses eax ebx ecx edx
				    invoke SetConsoleCursorPosition,outputHandle, coinGotCoord1
 00000699  A1 00000EA5 R		mov eax, coinGot
 0000069E  E8 00000000 E		call WriteDec
					invoke SetConsoleCursorPosition, outputHandle, coinGotCoord2
 000006B4  B9 00000003			mov ecx, 3
					invoke WriteFile, outputHandle, ADDR coinOutput, ecx, addr bytesWritten, NULL
					ret
 000006D6			displayCoinGot ENDP

 000006D6			displayEndData PROC uses eax ebx ecx edx
 000006DA			coin:
 000006DA  B2 2B			mov dl, 43
 000006DC  B6 07			mov dh, 7
 000006DE  E8 00000000 E		call gotoxy
 000006E3  A1 00000EA5 R		mov eax, CoinGot
 000006E8  E8 00000000 E		call WriteDec

 000006ED			time:
 000006ED  B2 2B			mov dl, 43
 000006EF  B6 04			mov dh, 4
 000006F1  E8 00000000 E		call gotoxy
 000006F6  A1 00000E5A R		mov eax, endTime
 000006FB  E8 00000000 E		call WriteDec

 00000700			point:
 00000700  B2 2B			mov dl, 43
 00000702  B6 0A			mov dh, 10
 00000704  E8 00000000 E		call gotoxy
 00000709  A1 00000EA5 R		mov eax, CoinGot
 0000070E  F7 25 00000E5A R		mul endTime
 00000714  E8 00000000 E		call WriteDec

					ret
 0000071E			displayEndData ENDP

				END main
Microsoft (R) Macro Assembler Version 14.42.34435.0	    12/13/24 22:42:43
main.asm						     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000EB5 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 0000071E Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetAsyncKeyState . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleOutputCP . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
displayCoinGot . . . . . . . . .	P Near	 00000684 _TEXT	Length= 00000052 Public STDCALL
displayEndData . . . . . . . . .	P Near	 000006D6 _TEXT	Length= 00000048 Public STDCALL
  coin . . . . . . . . . . . . .	L Near	 000006DA _TEXT	
  time . . . . . . . . . . . . .	L Near	 000006ED _TEXT	
  point  . . . . . . . . . . . .	L Near	 00000700 _TEXT	
displayEndscr  . . . . . . . . .	P Near	 0000042B _TEXT	Length= 0000011C Public STDCALL
  ReadLoop . . . . . . . . . . .	L Near	 00000450 _TEXT	
  Pos1 . . . . . . . . . . . . .	L Near	 000004B2 _TEXT	
  Pos2 . . . . . . . . . . . . .	L Near	 000004EE _TEXT	
  conti  . . . . . . . . . . . .	L Near	 00000528 _TEXT	
  EndDisplay . . . . . . . . . .	L Near	 00000537 _TEXT	
displayGamescr . . . . . . . . .	P Near	 000001D6 _TEXT	Length= 0000008E Public STDCALL
  ReadLoop . . . . . . . . . . .	L Near	 000001FB _TEXT	
  EndDisplay . . . . . . . . . .	L Near	 00000254 _TEXT	
displayInitialscr  . . . . . . .	P Near	 000002A3 _TEXT	Length= 0000011C Public STDCALL
  ReadLoop . . . . . . . . . . .	L Near	 000002C8 _TEXT	
  Pos1 . . . . . . . . . . . . .	L Near	 0000032A _TEXT	
  Pos2 . . . . . . . . . . . . .	L Near	 00000366 _TEXT	
  conti  . . . . . . . . . . . .	L Near	 000003A0 _TEXT	
  EndDisplay . . . . . . . . . .	L Near	 000003AF _TEXT	
displayTime  . . . . . . . . . .	P Near	 00000264 _TEXT	Length= 0000003F Public STDCALL
drawPlayer . . . . . . . . . . .	P Near	 0000019B _TEXT	Length= 0000003B Public STDCALL
generateCoins  . . . . . . . . .	P Near	 000005B3 _TEXT	Length= 000000D1 Public STDCALL
  Pos1 . . . . . . . . . . . . .	L Near	 000005F5 _TEXT	
  Pos2 . . . . . . . . . . . . .	L Near	 00000609 _TEXT	
  Pos3 . . . . . . . . . . . . .	L Near	 0000061D _TEXT	
  Pos4 . . . . . . . . . . . . .	L Near	 00000631 _TEXT	
  output . . . . . . . . . . . .	L Near	 00000645 _TEXT	
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 000000EF Public STDCALL
  initialLoop  . . . . . . . . .	L Near	 0000000C _TEXT	
  conti  . . . . . . . . . . . .	L Near	 00000026 _TEXT	
  GameLoop . . . . . . . . . . .	L Near	 0000003E _TEXT	
  endLoop  . . . . . . . . . . .	L Near	 00000080 _TEXT	
  Refresh  . . . . . . . . . . .	L Near	 0000008B _TEXT	
  CheckInput . . . . . . . . . .	L Near	 000000A3 _TEXT	
  SkipRefresh  . . . . . . . . .	L Near	 000000D7 _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
readInputEndscr  . . . . . . . .	P Near	 00000547 _TEXT	Length= 0000006C Public STDCALL
  confirm  . . . . . . . . . . .	L Near	 0000056E _TEXT	
  checkA . . . . . . . . . . . .	L Near	 0000057A _TEXT	
  checkD . . . . . . . . . . . .	L Near	 00000594 _TEXT	
  no_key_pressed . . . . . . . .	L Near	 000005AE _TEXT	
readInputInitialscr  . . . . . .	P Near	 000003BF _TEXT	Length= 0000006C Public STDCALL
  confirm  . . . . . . . . . . .	L Near	 000003E6 _TEXT	
  checkW . . . . . . . . . . . .	L Near	 000003F2 _TEXT	
  checkS . . . . . . . . . . . .	L Near	 0000040C _TEXT	
  no_key_pressed . . . . . . . .	L Near	 00000426 _TEXT	
readInput  . . . . . . . . . . .	P Near	 00000136 _TEXT	Length= 00000065 Public STDCALL
  CheckA . . . . . . . . . . . .	L Near	 0000015E _TEXT	
  CheckD . . . . . . . . . . . .	L Near	 00000172 _TEXT	
  CheckESC . . . . . . . . . . .	L Near	 00000186 _TEXT	
  EndInput . . . . . . . . . . .	L Near	 0000019A _TEXT	
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
updatePhysics  . . . . . . . . .	P Near	 000000EF _TEXT	Length= 00000047 Public STDCALL
  EndPhysics . . . . . . . . . .	L Near	 00000133 _TEXT	
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
TimerXY  . . . . . . . . . . . .	COORD	 0000002B _DATA	
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
buffer . . . . . . . . . . . . .	Byte	 00000049 _DATA	
bytesWritten . . . . . . . . . .	DWord	 00000005 _DATA	
cellsWritten . . . . . . . . . .	DWord	 00000017 _DATA	
coinAttribute  . . . . . . . . .	Word	 00000EA3 _DATA	
coinCoord  . . . . . . . . . . .	COORD	 00000E9D _DATA	
coinGenerated  . . . . . . . . .	Byte	 00000EA1 _DATA	
coinGotCoord1  . . . . . . . . .	COORD	 00000EAD _DATA	
coinGotCoord2  . . . . . . . . .	COORD	 00000EB1 _DATA	
coinGot  . . . . . . . . . . . .	DWord	 00000EA5 _DATA	
coinOutput . . . . . . . . . . .	Byte	 00000EA9 _DATA	
coinRandom . . . . . . . . . . .	Byte	 00000E9C _DATA	
coinSeed . . . . . . . . . . . .	DWord	 00000E98 _DATA	
coinSymbol . . . . . . . . . . .	Byte	 00000EA2 _DATA	
count  . . . . . . . . . . . . .	DWord	 00000009 _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
elapsedTime  . . . . . . . . . .	DWord	 00000023 _DATA	
endCoinGotCoord  . . . . . . . .	COORD	 00000E90 _DATA	
endCoinGot . . . . . . . . . . .	DWord	 00000E56 _DATA	
endExitLeftPos . . . . . . . . .	COORD	 00000E78 _DATA	
endExitLeftSymbol  . . . . . . .	DWord	 00000E7C _DATA	
endExitRightPos  . . . . . . . .	COORD	 00000E84 _DATA	
endExitRightSymbol . . . . . . .	DWord	 00000E88 _DATA	
endKeyPos  . . . . . . . . . . .	Byte	 00000E54 _DATA	
endStartLeftPos  . . . . . . . .	COORD	 00000E60 _DATA	
endStartLeftSymbol . . . . . . .	DWord	 00000E64 _DATA	
endStartRightPos . . . . . . . .	COORD	 00000E6C _DATA	
endStartRightSymbol  . . . . . .	DWord	 00000E70 _DATA	
endTimeCoord . . . . . . . . . .	COORD	 00000E94 _DATA	
endTime  . . . . . . . . . . . .	DWord	 00000E5A _DATA	
endbytesRead . . . . . . . . . .	DWord	 00000E4C _DATA	
endconfirm . . . . . . . . . . .	Byte	 00000E55 _DATA	
endfilehandle  . . . . . . . . .	DWord	 00000E48 _DATA	
endscrBytesWritten . . . . . . .	DWord	 00000E50 _DATA	
endscrfile . . . . . . . . . . .	Byte	 00000E3D _DATA	
escConfirm . . . . . . . . . . .	Byte	 00000016 _DATA	
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
gamebytesRead  . . . . . . . . .	DWord	 00000041 _DATA	
gamefilehandle . . . . . . . . .	DWord	 0000003D _DATA	
gamescrBytesWritten  . . . . . .	DWord	 00000045 _DATA	
gamescrfile  . . . . . . . . . .	Byte	 0000002F _DATA	
gravity  . . . . . . . . . . . .	Number	 00000001h   
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
groundLevel  . . . . . . . . . .	Word	 00000013 _DATA	
initialExitLeftPos . . . . . . .	COORD	 00000E25 _DATA	
initialExitLeftSymbol  . . . . .	DWord	 00000E29 _DATA	
initialExitRightPos  . . . . . .	COORD	 00000E31 _DATA	
initialExitRightSymbol . . . . .	DWord	 00000E35 _DATA	
initialKeyPos  . . . . . . . . .	Byte	 00000E0B _DATA	
initialStartLeftPos  . . . . . .	COORD	 00000E0D _DATA	
initialStartLeftSymbol . . . . .	DWord	 00000E11 _DATA	
initialStartRightPos . . . . . .	COORD	 00000E19 _DATA	
initialStartRightSymbol  . . . .	DWord	 00000E1D _DATA	
initialbytesRead . . . . . . . .	DWord	 00000E03 _DATA	
initialconfirm . . . . . . . . .	Byte	 00000E0C _DATA	
initialfilehandle  . . . . . . .	DWord	 00000DFF _DATA	
initialscrBytesWritten . . . . .	DWord	 00000E07 _DATA	
initialscrfile . . . . . . . . .	Byte	 00000DF5 _DATA	
jumpForce  . . . . . . . . . . .	Number	 -00000005h   
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
needsRefresh . . . . . . . . . .	Byte	 00000E5E _DATA	
onGround . . . . . . . . . . . .	Byte	 00000015 _DATA	
outputHandle . . . . . . . . . .	DWord	 00000001 _DATA	
playerAttributes . . . . . . . .	Word	 0000001B _DATA	
playerSize . . . . . . . . . . .	Number	 00000001h   
playerXY . . . . . . . . . . . .	COORD	 0000000D _DATA	
player . . . . . . . . . . . . .	Byte	 00000000 _DATA	
prevKeyPos . . . . . . . . . . .	Byte	 00000E5F _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
startTime  . . . . . . . . . . .	DWord	 0000001F _DATA	
timeLimit  . . . . . . . . . . .	DWord	 00000027 _DATA	
updateInterval . . . . . . . . .	Word	 0000001D _DATA	
velocityY  . . . . . . . . . . .	Word	 00000011 _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
