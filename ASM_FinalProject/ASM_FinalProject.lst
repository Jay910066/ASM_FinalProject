Microsoft (R) Macro Assembler Version 14.42.34435.0	    12/13/24 18:57:23
main.asm						     Page 1 - 1


				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 

 = 00000001			playerSize = 1
 = 00000001			gravity = 1
 =-00000005			jumpForce = -5

 00000000			.data
 00000000 50			player BYTE 'P'

 00000001 00000000		outputHandle DWORD 0
 00000005 00000000		bytesWritten DWORD 0
 00000009 00000000		count DWORD 0
 0000000D 000A 0005		playerXY COORD <10,5>
 00000011 0000			velocityY SWORD 0

 00000013 0019			groundLevel WORD 25
 00000015 01			onGround BYTE 1

 00000016 00			escConfirm byte 0

 00000017 00000000		cellsWritten DWORD ?
 0000001B  00000001 [		playerAttributes WORD playerSize DUP(0bh)
	    000B
	   ]

 0000001D 0032			updateInterval WORD 50 ; 100ms each update

 0000001F 00000000		startTime DWORD ?
 00000023 00000000		elapsedTime DWORD ?
 00000027 00000258		timeLimit DWORD 600 ; 600 seconds
 0000002B 0000 0000		TimerXY COORD <0,0>

 0000002F 67 61 6D 65 66	gamescrfile BYTE 'gamefield.txt',0
	   69 65 6C 64 2E
	   74 78 74 00
 0000003D 00000000		gamefilehandle HANDLE ?
 00000041 00000000		gamebytesRead DWORD ?
 00000045 00000000		gamescrBytesWritten DWORD ?

 00000049  00000DAC [		buffer BYTE 3500 DUP(?)
	    00
	   ]
 00000DF5 73 74 61 72 74	initialscrfile BYTE 'start.txt',0
	   2E 74 78 74 00
 00000DFF 00000000		initialfilehandle HANDLE ?
 00000E03 00000000		initialbytesRead DWORD ?
 00000E07 00000000		initialscrBytesWritten DWORD ?
 00000E0B 00			initialKeyPos Byte 0
 00000E0C 00			initialconfirm Byte 0

 00000E0D 0031 0011		initialStartLeftPos COORD <49,17>
 00000E11 0000003E		initialStartLeftSymbol DWORD '>',0
	   00000000
 00000E19 0049 0011		initialStartRightPos COORD <73,17>
 00000E1D 0000003C		initialStartRightSymbol DWORD '<',0
	   00000000

 00000E25 0031 0017		initialExitLeftPos COORD <49,23>
 00000E29 0000003E		initialExitLeftSymbol DWORD '>',0
	   00000000
 00000E31 0049 0017		initialExitRightPos COORD <73,23>
 00000E35 0000003C		initialExitRightSymbol DWORD '<',0
	   00000000

 00000E3D 66 69 6E 69 73	endscrfile BYTE 'finish.txt',0
	   68 2E 74 78 74
	   00
 00000E48 00000000		endfilehandle HANDLE ?
 00000E4C 00000000		endbytesRead DWORD ?
 00000E50 00000000		endscrBytesWritten DWORD ?
 00000E54 00			endKeyPos Byte 0
 00000E55 00			endconfirm Byte 0

 00000E56 001E 0014		endStartLeftPos COORD <30,20>
 00000E5A 0000003E		endStartLeftSymbol DWORD '>',0
	   00000000
 00000E62 0037 0014		endStartRightPos COORD <55,20>
 00000E66 0000003C		endStartRightSymbol DWORD '<',0
	   00000000

 00000E6E 0044 0014		endExitLeftPos COORD <68,20>
 00000E72 0000003E		endExitLeftSymbol DWORD '>',0
	   00000000
 00000E7A 005D 0014		endExitRightPos COORD <93,20>
 00000E7E 0000003C		endExitRightSymbol DWORD '<',0
	   00000000


 00000000			.code
					SetConsoleOutputCP PROTO STDCALL :DWORD
					GetAsyncKeyState PROTO STDCALL :DWORD
 00000000			main PROC
					;INVOKE SetConsoleOutputCP, 437

					; Get the console ouput handle
					INVOKE GetStdHandle, STD_OUTPUT_HANDLE
 00000007  A3 00000001 R		mov outputHandle, eax	; save console handle

 0000000C			initialLoop:
 0000000C  E8 00000000 E		call Clrscr
 00000011  E8 00000229			call displayInitialscr
 00000016  E8 00000340			call readInputInitialscr
 0000001B  80 3D 00000E0C R		cmp Initialconfirm, 1
	   01
 00000022  74 02			je conti
 00000024  EB E6			jmp initialLoop

 00000026			conti:
					INVOKE GetTickCount
 0000002B  A3 0000001F R		mov startTime, eax
 00000030  C6 05 00000016 R		mov escConfirm, 0
	   00
					
 00000037			GameLoop:
 00000037  E8 00000000 E		call Clrscr
 0000003C  E8 0000004F			call updatePhysics
 00000041  E8 00000131			call displayGamescr
 00000046  E8 000000F1			call drawPlayer
 0000004B  E8 000001B5			call displayTime
 00000050  E8 00000082			call readInput
 00000055  80 3D 00000016 R		cmp  escConfirm, 1
	   01
 0000005C  74 11			je endLoop
					invoke Sleep, updateInterval
 0000006D  EB C8			jmp GameLoop

 0000006F			endLoop:
 0000006F  E8 00000000 E		call Clrscr
 00000074  E8 00000349			call displayEndscr
 00000079  E8 00000460			call readInputEndscr
 0000007E  80 3D 00000E55 R		cmp endconfirm, 1
	   01
 00000085  74 9F			je conti
 00000087  EB E6			jmp endLoop

					exit
 00000090			main ENDP

 00000090			updatePhysics PROC uses eax ebx
				    ; 1. 更新玩家的 Y 座標
 00000092  66| A1		    mov ax, velocityY
	   00000011 R
 00000098  66| 01 05		    add playerXY.Y, ax        ; 根據垂直速度更新位置
	   0000000F R

				    ; 2. 應用重力（加速垂直速度）
 0000009F  66| 83 05		    add velocityY, gravity    ; 重力影響：速度越來越快
	   00000011 R 01

				    ; 3. 檢查是否低於地面
 000000A7  66| A1		    mov ax, playerXY.Y
	   0000000F R
 000000AD  66| 3B 05		    cmp ax, groundLevel
	   00000013 R
 000000B4  7E 1E		    jle EndPhysics            ; 如果未超過地面，跳過地面處理

				    ; 如果超出地面，重置到地面
 000000B6  66| A1		    mov ax, groundLevel
	   00000013 R
 000000BC  66| A3		    mov playerXY.Y, ax        ; 將玩家重置到地面
	   0000000F R
 000000C2  66| C7 05		    mov velocityY, 0          ; 停止垂直運動
	   00000011 R
	   0000
 000000CB  C6 05 00000015 R	    mov onGround, 1           ; 標記玩家在地面上
	   01
 000000D2  EB 00		    jmp EndPhysics

 000000D4			EndPhysics:
				    ret
 000000D7			updatePhysics ENDP

 000000D7			readInput PROC
				    ; 檢查W鍵（向上移動）
				    INVOKE GetAsyncKeyState, 'W'
 000000DE  66| A9 8000		    test ax, 8000h
 000000E2  74 1B		    jz CheckA
 000000E4  80 3D 00000015 R		cmp onGround, 1
	   01
 000000EB  75 12			jne CheckA
 000000ED  66| B8 0005			mov ax, 5
 000000F1  66| 29 05			sub velocityY, ax
	   00000011 R
 000000F8  C6 05 00000015 R		mov onGround, 0
	   00

 000000FF			CheckA:
				    ; 檢查A鍵（向左移動）
				    INVOKE GetAsyncKeyState, 'A'
 00000106  66| A9 8000		    test ax, 8000h
 0000010A  74 07		    jz CheckD
 0000010C  66| FF 0D		    dec playerXY.X           ; 玩家X座標減少，向左移動
	   0000000D R

 00000113			CheckD:
				    ; 檢查D鍵（向右移動）
				    INVOKE GetAsyncKeyState, 'D'
 0000011A  66| A9 8000		    test ax, 8000h
 0000011E  74 07		    jz CheckESC
 00000120  66| FF 05		    inc playerXY.X           ; 玩家X座標增加，向右移動
	   0000000D R

 00000127			CheckESC:
				    ; 檢查ESC鍵（退出遊戲）
				    INVOKE GetAsyncKeyState, VK_ESCAPE
 0000012E  66| A9 8000		    test ax, 8000h
 00000132  74 07		    jz EndInput
 00000134  C6 05 00000016 R	    mov escConfirm,1
	   01

 0000013B			EndInput:
 0000013B  C3				ret
 0000013C			readInput ENDP

 0000013C			drawPlayer PROC
					INVOKE WriteConsoleOutputAttribute,
					outputHandle, 
					OFFSET playerAttributes,
					playerSize, 
					playerXY,
					OFFSET count

					INVOKE WriteConsoleOutputCharacter,
					outputHandle,
					OFFSET player,
					playerSize,
					playerXY,
					OFFSET count
 00000176  C3				ret
 00000177			drawPlayer ENDP

 00000177			displayGamescr PROC uses eax ebx ecx edx
				    ;打開文字檔案
					INVOKE CreateFile, ADDR gamescrfile, GENERIC_READ, 0, NULL, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, NULL 
 00000197  A3 0000003D R		mov gamefilehandle, eax

 0000019C			ReadLoop:
					;使用UTF-8編碼，顯示符號
					INVOKE SetConsoleOutputCP, 65001

					;讀取檔案
					INVOKE ReadFile, gamefilehandle, ADDR buffer, SIZEOF buffer, ADDR gamebytesRead, NULL

					;畫面更新及輸出檔案
 000001C2  E8 00000000 E		call Clrscr
					INVOKE SetFilePointer, gamefilehandle, 0, NULL, FILE_BEGIN
					INVOKE WriteConsole, outputhandle, ADDR buffer, gamebytesRead, ADDR gamescrBytesWritten, NULL

 000001F5			EndDisplay:
					;關閉檔案
				    INVOKE CloseHandle, gamefilehandle
				    ret
 00000205			displayGamescr ENDP

 00000205			displayTime PROC uses eax ebx ecx edx
					INVOKE GetTickCount
 0000020E  2B 05 0000001F R		sub eax, startTime
 00000214  99				cdq
 00000215  BB 000003E8			mov ebx, 1000
 0000021A  F7 F3			div ebx
 0000021C  A3 00000023 R		mov elapsedTime, eax
 00000221  A1 00000027 R		mov eax, timeLimit
 00000226  2B 05 00000023 R		sub eax, elapsedTime

 0000022C  B2 01			mov dl, 1
 0000022E  B6 01			mov dh, 1
 00000230  E8 00000000 E		call gotoxy
 00000235  E8 00000000 E		call WriteDec
					ret
 0000023F			displayTime ENDP

 0000023F			displayInitialscr PROC uses eax ebx ecx edx
				    ;打開文字檔案
					INVOKE CreateFile, ADDR initialscrfile, GENERIC_READ, 0, NULL, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, NULL 
 0000025F  A3 00000DFF R		mov initialfilehandle, eax

 00000264			ReadLoop:
					;使用UTF-8編碼，顯示符號
					INVOKE SetConsoleOutputCP, 65001

					;讀取檔案
					INVOKE ReadFile, initialfilehandle, ADDR buffer, SIZEOF buffer, ADDR initialbytesRead, NULL

					;畫面更新及輸出檔案
 0000028A  E8 00000000 E		call Clrscr
					INVOKE SetFilePointer, initialfilehandle, 0, NULL, FILE_BEGIN
					INVOKE WriteConsole, outputhandle, ADDR buffer, initialbytesRead, ADDR initialscrBytesWritten, NULL
 000002BD  80 3D 00000E0B R		cmp initialKeyPos, 1
	   01
 000002C4  74 3C			je Pos2 

 000002C6			Pos1:
					INVOKE WriteConsoleOutputCharacter,
					outputHandle, 
					OFFSET initialStartLeftSymbol,
					1, 
					initialStartLeftPos,
					OFFSET count

					INVOKE WriteConsoleOutputCharacter,
					outputHandle, 
					OFFSET initialStartRightSymbol,
					1, 
					initialStartRightPos,
					OFFSET count
 00000300  EB 3A			jmp conti

 00000302			Pos2:
					INVOKE WriteConsoleOutputCharacter,
					outputHandle, 
					OFFSET initialExitLeftSymbol,
					1, 
					initialExitLeftPos,
					OFFSET count

					INVOKE WriteConsoleOutputCharacter,
					outputHandle, 
					OFFSET initialExitRightSymbol,
					1, 
					initialExitRightPos,
					OFFSET count

 0000033C			conti:
					INVOKE Sleep, updateInterval

 0000034B			EndDisplay:
					;關閉檔案
				    INVOKE CloseHandle, initialfilehandle
				    ret
 0000035B			displayInitialscr ENDP

 0000035B			readInputInitialscr PROC uses eax ebx ecx edx
					INVOKE GetAsyncKeyState, VK_RETURN
 00000366  A9 00008000			test eax, 8000h                     
 0000036B  74 1C		    jz checkW
 0000036D  80 3D 00000E0B R		cmp initialKeyPos, 0 ;判斷按鍵位置
	   00
 00000374  74 07			je confirm
					INVOKE ExitProcess, 0

 0000037D			confirm:
 0000037D  C6 05 00000E0C R		mov initialconfirm, 1
	   01
					ret

 00000389			checkW:
					INVOKE GetAsyncKeyState, 'W'
 00000390  A9 00008000			test eax, 8000h                     
 00000395  74 0C		    jz checkS
 00000397  C6 05 00000E0B R		mov initialKeyPos, 0
	   00
					ret

 000003A3			checkS:
					INVOKE GetAsyncKeyState, 'S'
 000003AA  A9 00008000			test eax, 8000h                     
 000003AF  74 0C		    jz no_key_pressed
 000003B1  C6 05 00000E0B R		mov initialKeyPos, 1
	   01
					ret

 000003BD			no_key_pressed:
					ret
 000003C2			readInputInitialscr ENDP

 000003C2			displayEndscr PROC uses eax ebx ecx edx
				    ;打開文字檔案
					INVOKE CreateFile, ADDR endscrfile, GENERIC_READ, 0, NULL, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, NULL 
 000003E2  A3 00000E48 R		mov endfilehandle, eax

 000003E7			ReadLoop:
					;使用UTF-8編碼，顯示符號
					INVOKE SetConsoleOutputCP, 65001

					;讀取檔案
					INVOKE ReadFile, endfilehandle, ADDR buffer, SIZEOF buffer, ADDR endbytesRead, NULL

					;畫面更新及輸出檔案
 0000040D  E8 00000000 E		call Clrscr
					INVOKE SetFilePointer, endfilehandle, 0, NULL, FILE_BEGIN
					INVOKE WriteConsole, outputhandle, ADDR buffer, endbytesRead, ADDR endscrBytesWritten, NULL
 00000440  80 3D 00000E54 R		cmp endKeyPos, 1
	   01
 00000447  74 3C			je Pos2 

 00000449			Pos1:
					INVOKE WriteConsoleOutputCharacter,
					outputHandle, 
					OFFSET endStartLeftSymbol,
					1, 
					endStartLeftPos,
					OFFSET count

					INVOKE WriteConsoleOutputCharacter,
					outputHandle, 
					OFFSET endStartRightSymbol,
					1, 
					endStartRightPos,
					OFFSET count
 00000483  EB 3A			jmp conti

 00000485			Pos2:
					INVOKE WriteConsoleOutputCharacter,
					outputHandle, 
					OFFSET endExitLeftSymbol,
					1, 
					endExitLeftPos,
					OFFSET count

					INVOKE WriteConsoleOutputCharacter,
					outputHandle, 
					OFFSET endExitRightSymbol,
					1, 
					endExitRightPos,
					OFFSET count

 000004BF			conti:
					INVOKE Sleep, updateInterval

 000004CE			EndDisplay:
					;關閉檔案
				    INVOKE CloseHandle, endfilehandle
				    ret
 000004DE			displayEndscr ENDP

 000004DE			readInputEndscr PROC uses eax ebx ecx edx
					INVOKE GetAsyncKeyState, VK_RETURN
 000004E9  A9 00008000			test eax, 8000h                     
 000004EE  74 1C		    jz checkA
 000004F0  80 3D 00000E54 R		cmp endKeyPos, 0 ;判斷按鍵位置
	   00
 000004F7  74 07			je confirm
					INVOKE ExitProcess, 0

 00000500			confirm:
 00000500  C6 05 00000E55 R		mov endconfirm, 1
	   01
					ret

 0000050C			checkA:
					INVOKE GetAsyncKeyState, 'A'
 00000513  A9 00008000			test eax, 8000h                     
 00000518  74 0C		    jz checkD
 0000051A  C6 05 00000E54 R		mov endKeyPos, 0
	   00
					ret

 00000526			checkD:
					INVOKE GetAsyncKeyState, 'D'
 0000052D  A9 00008000			test eax, 8000h                     
 00000532  74 0C		    jz no_key_pressed
 00000534  C6 05 00000E54 R		mov endKeyPos, 1
	   01
					ret

 00000540			no_key_pressed:
					ret
 00000545			readInputEndscr ENDP

				END main
Microsoft (R) Macro Assembler Version 14.42.34435.0	    12/13/24 18:57:23
main.asm						     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000E86 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000545 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetAsyncKeyState . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleOutputCP . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
displayEndscr  . . . . . . . . .	P Near	 000003C2 _TEXT	Length= 0000011C Public STDCALL
  ReadLoop . . . . . . . . . . .	L Near	 000003E7 _TEXT	
  Pos1 . . . . . . . . . . . . .	L Near	 00000449 _TEXT	
  Pos2 . . . . . . . . . . . . .	L Near	 00000485 _TEXT	
  conti  . . . . . . . . . . . .	L Near	 000004BF _TEXT	
  EndDisplay . . . . . . . . . .	L Near	 000004CE _TEXT	
displayGamescr . . . . . . . . .	P Near	 00000177 _TEXT	Length= 0000008E Public STDCALL
  ReadLoop . . . . . . . . . . .	L Near	 0000019C _TEXT	
  EndDisplay . . . . . . . . . .	L Near	 000001F5 _TEXT	
displayInitialscr  . . . . . . .	P Near	 0000023F _TEXT	Length= 0000011C Public STDCALL
  ReadLoop . . . . . . . . . . .	L Near	 00000264 _TEXT	
  Pos1 . . . . . . . . . . . . .	L Near	 000002C6 _TEXT	
  Pos2 . . . . . . . . . . . . .	L Near	 00000302 _TEXT	
  conti  . . . . . . . . . . . .	L Near	 0000033C _TEXT	
  EndDisplay . . . . . . . . . .	L Near	 0000034B _TEXT	
displayTime  . . . . . . . . . .	P Near	 00000205 _TEXT	Length= 0000003A Public STDCALL
drawPlayer . . . . . . . . . . .	P Near	 0000013C _TEXT	Length= 0000003B Public STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000090 Public STDCALL
  initialLoop  . . . . . . . . .	L Near	 0000000C _TEXT	
  conti  . . . . . . . . . . . .	L Near	 00000026 _TEXT	
  GameLoop . . . . . . . . . . .	L Near	 00000037 _TEXT	
  endLoop  . . . . . . . . . . .	L Near	 0000006F _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
readInputEndscr  . . . . . . . .	P Near	 000004DE _TEXT	Length= 00000067 Public STDCALL
  confirm  . . . . . . . . . . .	L Near	 00000500 _TEXT	
  checkA . . . . . . . . . . . .	L Near	 0000050C _TEXT	
  checkD . . . . . . . . . . . .	L Near	 00000526 _TEXT	
  no_key_pressed . . . . . . . .	L Near	 00000540 _TEXT	
readInputInitialscr  . . . . . .	P Near	 0000035B _TEXT	Length= 00000067 Public STDCALL
  confirm  . . . . . . . . . . .	L Near	 0000037D _TEXT	
  checkW . . . . . . . . . . . .	L Near	 00000389 _TEXT	
  checkS . . . . . . . . . . . .	L Near	 000003A3 _TEXT	
  no_key_pressed . . . . . . . .	L Near	 000003BD _TEXT	
readInput  . . . . . . . . . . .	P Near	 000000D7 _TEXT	Length= 00000065 Public STDCALL
  CheckA . . . . . . . . . . . .	L Near	 000000FF _TEXT	
  CheckD . . . . . . . . . . . .	L Near	 00000113 _TEXT	
  CheckESC . . . . . . . . . . .	L Near	 00000127 _TEXT	
  EndInput . . . . . . . . . . .	L Near	 0000013B _TEXT	
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
updatePhysics  . . . . . . . . .	P Near	 00000090 _TEXT	Length= 00000047 Public STDCALL
  EndPhysics . . . . . . . . . .	L Near	 000000D4 _TEXT	
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
TimerXY  . . . . . . . . . . . .	COORD	 0000002B _DATA	
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
buffer . . . . . . . . . . . . .	Byte	 00000049 _DATA	
bytesWritten . . . . . . . . . .	DWord	 00000005 _DATA	
cellsWritten . . . . . . . . . .	DWord	 00000017 _DATA	
count  . . . . . . . . . . . . .	DWord	 00000009 _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
elapsedTime  . . . . . . . . . .	DWord	 00000023 _DATA	
endExitLeftPos . . . . . . . . .	COORD	 00000E6E _DATA	
endExitLeftSymbol  . . . . . . .	DWord	 00000E72 _DATA	
endExitRightPos  . . . . . . . .	COORD	 00000E7A _DATA	
endExitRightSymbol . . . . . . .	DWord	 00000E7E _DATA	
endKeyPos  . . . . . . . . . . .	Byte	 00000E54 _DATA	
endStartLeftPos  . . . . . . . .	COORD	 00000E56 _DATA	
endStartLeftSymbol . . . . . . .	DWord	 00000E5A _DATA	
endStartRightPos . . . . . . . .	COORD	 00000E62 _DATA	
endStartRightSymbol  . . . . . .	DWord	 00000E66 _DATA	
endbytesRead . . . . . . . . . .	DWord	 00000E4C _DATA	
endconfirm . . . . . . . . . . .	Byte	 00000E55 _DATA	
endfilehandle  . . . . . . . . .	DWord	 00000E48 _DATA	
endscrBytesWritten . . . . . . .	DWord	 00000E50 _DATA	
endscrfile . . . . . . . . . . .	Byte	 00000E3D _DATA	
escConfirm . . . . . . . . . . .	Byte	 00000016 _DATA	
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
gamebytesRead  . . . . . . . . .	DWord	 00000041 _DATA	
gamefilehandle . . . . . . . . .	DWord	 0000003D _DATA	
gamescrBytesWritten  . . . . . .	DWord	 00000045 _DATA	
gamescrfile  . . . . . . . . . .	Byte	 0000002F _DATA	
gravity  . . . . . . . . . . . .	Number	 00000001h   
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
groundLevel  . . . . . . . . . .	Word	 00000013 _DATA	
initialExitLeftPos . . . . . . .	COORD	 00000E25 _DATA	
initialExitLeftSymbol  . . . . .	DWord	 00000E29 _DATA	
initialExitRightPos  . . . . . .	COORD	 00000E31 _DATA	
initialExitRightSymbol . . . . .	DWord	 00000E35 _DATA	
initialKeyPos  . . . . . . . . .	Byte	 00000E0B _DATA	
initialStartLeftPos  . . . . . .	COORD	 00000E0D _DATA	
initialStartLeftSymbol . . . . .	DWord	 00000E11 _DATA	
initialStartRightPos . . . . . .	COORD	 00000E19 _DATA	
initialStartRightSymbol  . . . .	DWord	 00000E1D _DATA	
initialbytesRead . . . . . . . .	DWord	 00000E03 _DATA	
initialconfirm . . . . . . . . .	Byte	 00000E0C _DATA	
initialfilehandle  . . . . . . .	DWord	 00000DFF _DATA	
initialscrBytesWritten . . . . .	DWord	 00000E07 _DATA	
initialscrfile . . . . . . . . .	Byte	 00000DF5 _DATA	
jumpForce  . . . . . . . . . . .	Number	 -00000005h   
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
onGround . . . . . . . . . . . .	Byte	 00000015 _DATA	
outputHandle . . . . . . . . . .	DWord	 00000001 _DATA	
playerAttributes . . . . . . . .	Word	 0000001B _DATA	
playerSize . . . . . . . . . . .	Number	 00000001h   
playerXY . . . . . . . . . . . .	COORD	 0000000D _DATA	
player . . . . . . . . . . . . .	Byte	 00000000 _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
startTime  . . . . . . . . . . .	DWord	 0000001F _DATA	
timeLimit  . . . . . . . . . . .	DWord	 00000027 _DATA	
updateInterval . . . . . . . . .	Word	 0000001D _DATA	
velocityY  . . . . . . . . . . .	Word	 00000011 _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
