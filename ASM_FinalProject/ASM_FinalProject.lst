Microsoft (R) Macro Assembler Version 14.42.34435.0	    12/14/24 12:23:03
main.asm						     Page 1 - 1


				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 

 = 00000001			playerSize = 1
 = 00000001			gravity = 1
 =-00000005			jumpForce = -5

 00000000			.data
 00000000 50			player BYTE 'P'

 00000001 00000000		outputHandle DWORD 0
 00000005 00000000		bytesWritten DWORD 0
 00000009 00000000		count DWORD 0
 0000000D 000A 0005		playerXY COORD <10,5>
 00000011 0000			velocityY SWORD 0

 00000013 0018			groundLevel WORD 24
 00000015 01			onGround BYTE 1

 00000016 00			escConfirm byte 0

 00000017 00000000		cellsWritten DWORD ?
 0000001B  00000001 [		playerAttributes WORD playerSize DUP(0bh)
	    000B
	   ]

 0000001D 0032			updateInterval WORD 50 ; 100ms each update

 0000001F 00000000		startTime DWORD ?
 00000023 00000000		elapsedTime DWORD ?
 00000027 00000258		timeLimit DWORD 600 ; 600 seconds
 0000002B 0000 0000		TimerXY COORD <0,0>

				;遊戲畫面資料
 0000002F 67 61 6D 65 66	gamescrfile BYTE 'gamefield.txt',0
	   69 65 6C 64 2E
	   74 78 74 00
 0000003D 00000000		gamefilehandle HANDLE ?
 00000041 00000000		gamebytesRead DWORD ?
 00000045 00000000		gamescrBytesWritten DWORD ?

				;初始畫面資料
 00000049  00001388 [		buffer BYTE 5000 DUP(?)
	    00
	   ]
 000013D1 73 74 61 72 74	initialscrfile BYTE 'start.txt',0
	   2E 74 78 74 00
 000013DB 00000000		initialfilehandle HANDLE ?
 000013DF 00000000		initialbytesRead DWORD ?
 000013E3 00000000		initialscrBytesWritten DWORD ?
 000013E7 00			initialKeyPos Byte 0
 000013E8 00			initialconfirm Byte 0

 000013E9 0031 0011		initialStartLeftPos COORD <49,17>
 000013ED 0000003E		initialStartLeftSymbol DWORD '>',0
	   00000000
 000013F5 0049 0011		initialStartRightPos COORD <73,17>
 000013F9 0000003C		initialStartRightSymbol DWORD '<',0
	   00000000

 00001401 0031 0017		initialExitLeftPos COORD <49,23>
 00001405 0000003E		initialExitLeftSymbol DWORD '>',0
	   00000000
 0000140D 0049 0017		initialExitRightPos COORD <73,23>
 00001411 0000003C		initialExitRightSymbol DWORD '<',0
	   00000000

				;結算畫面資料
 00001419 66 69 6E 69 73	endscrfile BYTE 'finish.txt',0
	   68 2E 74 78 74
	   00
 00001424 00000000		endfilehandle HANDLE ?
 00001428 00000000		endbytesRead DWORD ?
 0000142C 00000000		endscrBytesWritten DWORD ?
 00001430 00			endKeyPos Byte 0
 00001431 00			endconfirm Byte 0
 00001432 00000000		endCoinGot DWORD 0
 00001436 00000000		endTime DWORD 0
 0000143A 01			needsRefresh BYTE 1
 0000143B 00			prevKeyPos BYTE 0

 0000143C 001E 0014		endStartLeftPos COORD <30,20>
 00001440 0000003E		endStartLeftSymbol DWORD '>',0
	   00000000
 00001448 0037 0014		endStartRightPos COORD <55,20>
 0000144C 0000003C		endStartRightSymbol DWORD '<',0
	   00000000

 00001454 0044 0014		endExitLeftPos COORD <68,20>
 00001458 0000003E		endExitLeftSymbol DWORD '>',0
	   00000000
 00001460 005D 0014		endExitRightPos COORD <93,20>
 00001464 0000003C		endExitRightSymbol DWORD '<',0
	   00000000
 0000146C 002B 0007		endCoinGotCoord COORD <43,7>
 00001470 002B 0004		endTimeCoord COORD <43,4>

				;金幣生成資料
 00001474 00000001		coinSeed DWORD 1
 00001478 0000 0000		coinCoord COORD <0,0>
 0000147C 00			coinGenerated byte 0
 0000147D 24			coinSymbol byte '$'
 0000147E 000E			coinAttribute WORD 0Eh
 00001480 00000000		coinGot DWORD 0
 00001484 2F 31 35 00		coinOutput db "/15",0
 00001488 0001 0002		coinGotCoord1 COORD <1,2>
 0000148C 0003 0002		coinGotCoord2 COORD <3,2>
 00001490 00			coinGet byte 0

 00000000			.code
					SetConsoleOutputCP PROTO STDCALL :DWORD
					GetAsyncKeyState PROTO STDCALL :DWORD
 00000000			main PROC
					;INVOKE SetConsoleOutputCP, 437

					; Get the console ouput handle
					INVOKE GetStdHandle, STD_OUTPUT_HANDLE
 00000007  A3 00000001 R		mov outputHandle, eax	; save console handle

 0000000C			initialLoop:
 0000000C  E8 00000000 E		call Clrscr
 00000011  E8 00000297			call displayInitialscr
 00000016  E8 000003AE			call readInputInitialscr
 0000001B  80 3D 000013E8 R		cmp Initialconfirm, 1
	   01
 00000022  74 02			je conti
 00000024  EB E6			jmp initialLoop

 00000026			conti:
					INVOKE GetTickCount
 0000002B  A3 0000001F R		mov startTime, eax
 00000030  C6 05 00000016 R		mov escConfirm, 0
	   00
 00000037  C6 05 00001431 R		mov endConfirm, 0
	   00
					
 0000003E			GameLoop:
 0000003E  E8 00000000 E		call Clrscr
 00000043  E8 000000B1			call updatePhysics
 00000048  E8 00000193			call displayGamescr
 0000004D  E8 00000153			call drawPlayer
 00000052  E8 00000217			call displayTime
 00000057  E8 00000643			call displayCoinGot
 0000005C  E8 000000DF			call readInput
 00000061  E8 000006D3			call getCoin
 00000066  E8 00000552			call generateCoins
 0000006B  E8 00000713			call endGame
 00000070  80 3D 00000016 R		cmp  escConfirm, 1
	   01
 00000077  74 11			je endLoop
					invoke Sleep, updateInterval
 00000088  EB B4			jmp GameLoop

 0000008A			endLoop:
 0000008A  80 3D 0000143A R		cmp needsRefresh, 1
	   01
 00000091  74 02			je Refresh
 00000093  EB 18			jmp CheckInput

 00000095			Refresh:
 00000095  E8 00000000 E		call Clrscr
 0000009A  E8 00000396			call displayEndscr
 0000009F  E8 0000064D			call displayEndData
 000000A4  C6 05 0000143A R		mov needsRefresh, 0
	   00
 000000AB  EB 00			jmp CheckInput

 000000AD			CheckInput:
 000000AD  E8 0000049F			call readInputEndscr
 000000B2  80 3D 00001431 R		cmp endconfirm, 1
	   01
 000000B9  0F 84 FFFFFF67		je conti
 000000BF  A0 00001430 R		mov al, endKeyPos
 000000C4  8A 25 0000143B R		mov ah, prevKeyPos
 000000CA  3A E0			cmp ah, al
 000000CC  74 13			je SkipRefresh
 000000CE  C6 05 0000143A R		mov needsRefresh, 1
	   01
 000000D5  8A 25 00001430 R		mov ah, endKeyPos
 000000DB  88 25 0000143B R		mov prevKeyPos, ah

 000000E1			SkipRefresh:
					invoke Sleep, updateInterval
 000000F0  EB 98			jmp endLoop

					exit
 000000F9			main ENDP

 000000F9			updatePhysics PROC uses eax ebx
				    ; 1. 更新玩家的 Y 座標
 000000FB  66| A1		    mov ax, velocityY
	   00000011 R
 00000101  66| 01 05		    add playerXY.Y, ax        ; 根據垂直速度更新位置
	   0000000F R

				    ; 2. 應用重力（加速垂直速度）
 00000108  66| 83 05		    add velocityY, gravity    ; 重力影響：速度越來越快
	   00000011 R 01

				    ; 3. 檢查是否低於地面
 00000110  66| A1		    mov ax, playerXY.Y
	   0000000F R
 00000116  66| 3B 05		    cmp ax, groundLevel
	   00000013 R
 0000011D  7E 1E		    jle EndPhysics            ; 如果未超過地面，跳過地面處理

				    ; 如果超出地面，重置到地面
 0000011F  66| A1		    mov ax, groundLevel
	   00000013 R
 00000125  66| A3		    mov playerXY.Y, ax        ; 將玩家重置到地面
	   0000000F R
 0000012B  66| C7 05		    mov velocityY, 0          ; 停止垂直運動
	   00000011 R
	   0000
 00000134  C6 05 00000015 R	    mov onGround, 1           ; 標記玩家在地面上
	   01
 0000013B  EB 00		    jmp EndPhysics

 0000013D			EndPhysics:
				    ret
 00000140			updatePhysics ENDP

 00000140			readInput PROC
				    ; 檢查W鍵（向上移動）
				    INVOKE GetAsyncKeyState, 'W'
 00000147  66| A9 8000		    test ax, 8000h
 0000014B  74 1B		    jz CheckA
 0000014D  80 3D 00000015 R		cmp onGround, 1
	   01
 00000154  75 12			jne CheckA
 00000156  66| B8 0005			mov ax, 5
 0000015A  66| 29 05			sub velocityY, ax
	   00000011 R
 00000161  C6 05 00000015 R		mov onGround, 0
	   00

 00000168			CheckA:
				    ; 檢查A鍵（向左移動）
				    INVOKE GetAsyncKeyState, 'A'
 0000016F  66| A9 8000		    test ax, 8000h
 00000173  74 07		    jz CheckD
 00000175  66| FF 0D		    dec playerXY.X           ; 玩家X座標減少，向左移動
	   0000000D R

 0000017C			CheckD:
				    ; 檢查D鍵（向右移動）
				    INVOKE GetAsyncKeyState, 'D'
 00000183  66| A9 8000		    test ax, 8000h
 00000187  74 07		    jz CheckESC
 00000189  66| FF 05		    inc playerXY.X           ; 玩家X座標增加，向右移動
	   0000000D R

 00000190			CheckESC:
				    ; 檢查ESC鍵（退出遊戲）
				    INVOKE GetAsyncKeyState, VK_ESCAPE
 00000197  66| A9 8000		    test ax, 8000h
 0000019B  74 07		    jz EndInput
 0000019D  C6 05 00000016 R	    mov escConfirm,1
	   01

 000001A4			EndInput:
 000001A4  C3				ret
 000001A5			readInput ENDP

 000001A5			drawPlayer PROC
					INVOKE WriteConsoleOutputAttribute,
					outputHandle, 
					OFFSET playerAttributes,
					playerSize, 
					playerXY,
					OFFSET count

					INVOKE WriteConsoleOutputCharacter,
					outputHandle,
					OFFSET player,
					playerSize,
					playerXY,
					OFFSET count
 000001DF  C3				ret
 000001E0			drawPlayer ENDP

 000001E0			displayGamescr PROC uses eax ebx ecx edx
				    ;打開文字檔案
					INVOKE CreateFile, ADDR gamescrfile, GENERIC_READ, 0, NULL, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, NULL 
 00000200  A3 0000003D R		mov gamefilehandle, eax

 00000205			ReadLoop:
					;使用UTF-8編碼，顯示符號
					INVOKE SetConsoleOutputCP, 65001

					;讀取檔案
					INVOKE ReadFile, gamefilehandle, ADDR buffer, SIZEOF buffer, ADDR gamebytesRead, NULL

					;畫面更新及輸出檔案
 0000022B  E8 00000000 E		call Clrscr
					INVOKE SetFilePointer, gamefilehandle, 0, NULL, FILE_BEGIN
					INVOKE WriteConsole, outputHandle, ADDR buffer, gamebytesRead, ADDR gamescrBytesWritten, NULL

 0000025E			EndDisplay:
					;關閉檔案
				    INVOKE CloseHandle, gamefilehandle
				    ret
 0000026E			displayGamescr ENDP

 0000026E			displayTime PROC uses eax ebx ecx edx
					INVOKE GetTickCount
 00000277  2B 05 0000001F R		sub eax, startTime
 0000027D  99				cdq
 0000027E  BB 000003E8			mov ebx, 1000
 00000283  F7 F3			div ebx
 00000285  A3 00000023 R		mov elapsedTime, eax
 0000028A  A1 00000027 R		mov eax, timeLimit
 0000028F  2B 05 00000023 R		sub eax, elapsedTime
 00000295  A3 00001436 R		mov endTime, eax

 0000029A  B2 01			mov dl, 1
 0000029C  B6 01			mov dh, 1
 0000029E  E8 00000000 E		call gotoxy
 000002A3  E8 00000000 E		call WriteDec
					ret
 000002AD			displayTime ENDP

 000002AD			displayInitialscr PROC uses eax ebx ecx edx
				    ;打開文字檔案
					INVOKE CreateFile, ADDR initialscrfile, GENERIC_READ, 0, NULL, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, NULL 
 000002CD  A3 000013DB R		mov initialfilehandle, eax

 000002D2			ReadLoop:
					;使用UTF-8編碼，顯示符號
					INVOKE SetConsoleOutputCP, 65001

					;讀取檔案
					INVOKE ReadFile, initialfilehandle, ADDR buffer, SIZEOF buffer, ADDR initialbytesRead, NULL

					;畫面更新及輸出檔案
 000002F8  E8 00000000 E		call Clrscr
					INVOKE SetFilePointer, initialfilehandle, 0, NULL, FILE_BEGIN
					INVOKE WriteConsole, outputHandle, ADDR buffer, initialbytesRead, ADDR initialscrBytesWritten, NULL
 0000032B  80 3D 000013E7 R		cmp initialKeyPos, 1
	   01
 00000332  74 3C			je Pos2 

 00000334			Pos1:
					INVOKE WriteConsoleOutputCharacter,
					outputHandle, 
					OFFSET initialStartLeftSymbol,
					1, 
					initialStartLeftPos,
					OFFSET count

					INVOKE WriteConsoleOutputCharacter,
					outputHandle, 
					OFFSET initialStartRightSymbol,
					1, 
					initialStartRightPos,
					OFFSET count
 0000036E  EB 3A			jmp conti

 00000370			Pos2:
					INVOKE WriteConsoleOutputCharacter,
					outputHandle, 
					OFFSET initialExitLeftSymbol,
					1, 
					initialExitLeftPos,
					OFFSET count

					INVOKE WriteConsoleOutputCharacter,
					outputHandle, 
					OFFSET initialExitRightSymbol,
					1, 
					initialExitRightPos,
					OFFSET count

 000003AA			conti:
					INVOKE Sleep, updateInterval

 000003B9			EndDisplay:
					;關閉檔案
				    INVOKE CloseHandle, initialfilehandle
				    ret
 000003C9			displayInitialscr ENDP

 000003C9			readInputInitialscr PROC uses eax ebx ecx edx
					INVOKE GetAsyncKeyState, VK_RETURN
 000003D4  A9 00008000			test eax, 8000h                     
 000003D9  74 21		    jz checkW
 000003DB  80 3D 000013E7 R		cmp initialKeyPos, 0 ;判斷按鍵位置
	   00
 000003E2  74 0C			je confirm
 000003E4  E8 00000000 E		call Clrscr
					INVOKE ExitProcess, 0

 000003F0			confirm:
 000003F0  C6 05 000013E8 R		mov initialconfirm, 1
	   01
					ret

 000003FC			checkW:
					INVOKE GetAsyncKeyState, 'W'
 00000403  A9 00008000			test eax, 8000h                     
 00000408  74 0C		    jz checkS
 0000040A  C6 05 000013E7 R		mov initialKeyPos, 0
	   00
					ret

 00000416			checkS:
					INVOKE GetAsyncKeyState, 'S'
 0000041D  A9 00008000			test eax, 8000h                     
 00000422  74 0C		    jz no_key_pressed
 00000424  C6 05 000013E7 R		mov initialKeyPos, 1
	   01
					ret

 00000430			no_key_pressed:
					ret
 00000435			readInputInitialscr ENDP

 00000435			displayEndscr PROC uses eax ebx ecx edx
				    ;打開文字檔案
					INVOKE CreateFile, ADDR endscrfile, GENERIC_READ, 0, NULL, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, NULL 
 00000455  A3 00001424 R		mov endfilehandle, eax

 0000045A			ReadLoop:
					;使用UTF-8編碼，顯示符號
					INVOKE SetConsoleOutputCP, 65001

					;讀取檔案
					INVOKE ReadFile, endfilehandle, ADDR buffer, SIZEOF buffer, ADDR endbytesRead, NULL

					;畫面更新及輸出檔案
 00000480  E8 00000000 E		call Clrscr
					INVOKE SetFilePointer, endfilehandle, 0, NULL, FILE_BEGIN
					INVOKE WriteConsole, outputHandle, ADDR buffer, endbytesRead, ADDR endscrBytesWritten, NULL
 000004B3  80 3D 00001430 R		cmp endKeyPos, 1
	   01
 000004BA  74 3C			je Pos2 

 000004BC			Pos1:
					INVOKE WriteConsoleOutputCharacter,
					outputHandle, 
					OFFSET endStartLeftSymbol,
					1, 
					endStartLeftPos,
					OFFSET count

					INVOKE WriteConsoleOutputCharacter,
					outputHandle, 
					OFFSET endStartRightSymbol,
					1, 
					endStartRightPos,
					OFFSET count
 000004F6  EB 3A			jmp conti

 000004F8			Pos2:
					INVOKE WriteConsoleOutputCharacter,
					outputHandle, 
					OFFSET endExitLeftSymbol,
					1, 
					endExitLeftPos,
					OFFSET count

					INVOKE WriteConsoleOutputCharacter,
					outputHandle, 
					OFFSET endExitRightSymbol,
					1, 
					endExitRightPos,
					OFFSET count

 00000532			conti:
					INVOKE Sleep, updateInterval

 00000541			EndDisplay:
					;關閉檔案
				    INVOKE CloseHandle, endfilehandle
				    ret
 00000551			displayEndscr ENDP

 00000551			readInputEndscr PROC uses eax ebx ecx edx
					INVOKE GetAsyncKeyState, VK_RETURN
 0000055C  A9 00008000			test eax, 8000h                     
 00000561  74 21		    jz checkA
 00000563  80 3D 00001430 R		cmp endKeyPos, 0 ;判斷按鍵位置
	   00
 0000056A  74 0C			je confirm
 0000056C  E8 00000000 E		call Clrscr
					INVOKE ExitProcess, 0

 00000578			confirm:
 00000578  C6 05 00001431 R		mov endconfirm, 1
	   01
					ret

 00000584			checkA:
					INVOKE GetAsyncKeyState, 'A'
 0000058B  A9 00008000			test eax, 8000h                     
 00000590  74 0C		    jz checkD
 00000592  C6 05 00001430 R		mov endKeyPos, 0
	   00
					ret

 0000059E			checkD:
					INVOKE GetAsyncKeyState, 'D'
 000005A5  A9 00008000			test eax, 8000h                     
 000005AA  74 0C		    jz no_key_pressed
 000005AC  C6 05 00001430 R		mov endKeyPos, 1
	   01
					ret

 000005B8			no_key_pressed:
					ret
 000005BD			readInputEndscr ENDP

 000005BD			generateCoins PROC uses eax ebx ecx edx
 000005C1  80 3D 0000147C R		cmp coinGenerated, 1
	   01
 000005C8  0F 84 0000008B		je output
 000005CE  A1 00001474 R		mov eax, coinSeed
 000005D3  B9 00000004			mov ecx, 4
 000005D8  33 D2			xor edx,edx
 000005DA  F7 F1			div ecx
 000005DC  01 05 00001474 R		add coinSeed, eax 
 000005E2  83 3D 00001474 R		cmp coinSeed, 1
	   01
 000005E9  74 14			je Pos1
 000005EB  83 3D 00001474 R		cmp coinSeed, 2
	   02
 000005F2  74 1F			je Pos2
 000005F4  83 3D 00001474 R		cmp coinSeed, 3
	   03
 000005FB  74 2A			je Pos3
 000005FD  EB 3C			jmp Pos4

 000005FF			Pos1:
 000005FF  66| C7 05			mov coinCoord.x, 15
	   00001478 R
	   000F
 00000608  66| C7 05			mov coinCoord.y, 20
	   0000147A R
	   0014
 00000611  EB 46			jmp output

 00000613			Pos2:
 00000613  66| C7 05			mov coinCoord.x, 90
	   00001478 R
	   005A
 0000061C  66| C7 05			mov coinCoord.y, 3
	   0000147A R
	   0003
 00000625  EB 32			jmp output

 00000627			Pos3:
 00000627  66| C7 05			mov coinCoord.x, 40
	   00001478 R
	   0028
 00000630  66| C7 05			mov coinCoord.y, 15
	   0000147A R
	   000F
 00000639  EB 1E			jmp output

 0000063B			Pos4:
 0000063B  66| C7 05			mov coinCoord.x, 98
	   00001478 R
	   0062
 00000644  66| C7 05			mov coinCoord.y, 17
	   0000147A R
	   0011
 0000064D  C7 05 00001474 R		mov coinSeed, 0
	   00000000
 00000657  EB 00			jmp output

 00000659			output:
					INVOKE WriteConsoleOutputCharacter,
					outputHandle,
					OFFSET coinSymbol,
					1,
					coinCoord,
					OFFSET count

					INVOKE WriteConsoleOutputAttribute,
					outputHandle, 
					OFFSET coinAttribute,
					1, 
					coinCoord,
					OFFSET count

 00000693  C6 05 0000147C R		mov coinGenerated, 1
	   01
					ret
 0000069F			generateCoins ENDP

 0000069F			displayCoinGot PROC uses eax ebx ecx edx
				    invoke SetConsoleCursorPosition,outputHandle, coinGotCoord1
 000006B4  A1 00001480 R		mov eax, coinGot
 000006B9  E8 00000000 E		call WriteDec
					invoke SetConsoleCursorPosition, outputHandle, coinGotCoord2
 000006CF  B9 00000003			mov ecx, 3
					invoke WriteFile, outputHandle, ADDR coinOutput, ecx, addr bytesWritten, NULL
					ret
 000006F1			displayCoinGot ENDP

 000006F1			displayEndData PROC uses eax ebx ecx edx
 000006F5			coin:
 000006F5  B2 2B			mov dl, 43
 000006F7  B6 07			mov dh, 7
 000006F9  E8 00000000 E		call gotoxy
 000006FE  A1 00001480 R		mov eax, CoinGot
 00000703  E8 00000000 E		call WriteDec

 00000708			time:
 00000708  B2 2B			mov dl, 43
 0000070A  B6 04			mov dh, 4
 0000070C  E8 00000000 E		call gotoxy
 00000711  A1 00001436 R		mov eax, endTime
 00000716  E8 00000000 E		call WriteDec

 0000071B			point:
 0000071B  B2 2B			mov dl, 43
 0000071D  B6 0A			mov dh, 10
 0000071F  E8 00000000 E		call gotoxy
 00000724  A1 00001480 R		mov eax, CoinGot
 00000729  F7 25 00001436 R		mul endTime
 0000072F  E8 00000000 E		call WriteDec

					ret
 00000739			displayEndData ENDP

 00000739			getCoin PROC uses eax ebx ecx edx
 0000073D			compareX:
 0000073D  66| A1			mov ax, playerXY.x
	   0000000D R
 00000743  66| 3B 05			cmp ax, coinCoord.x
	   00001478 R
 0000074A  75 2B			jne not_equal

 0000074C			compareY:
 0000074C  66| A1			mov ax, playerXY.y
	   0000000F R
 00000752  66| 3B 05			cmp ax, coinCoord.y
	   0000147A R
 00000759  75 1C			jne not_equal

 0000075B			equal:
 0000075B  C6 05 00001490 R		mov coinGet, 1
	   01
 00000762  FF 05 00001480 R		inc coinGot
 00000768  C6 05 0000147C R		mov coinGenerated, 0
	   00
 0000076F  FF 05 00001474 R		inc coinSeed
 00000775  EB 07			jmp end_program

 00000777			not_equal:
 00000777  C6 05 00001490 R		mov coinGet, 0
	   00

 0000077E			end_program:
					ret

 00000783			getCoin ENDP

 00000783			endGame PROC uses eax ebx ecx edx
 00000787  A1 00001480 R		mov eax, coinGot
 0000078C  83 F8 0F			cmp eax, 15
 0000078F  74 0C			je equal

 00000791  A1 00001436 R		mov eax, endTime
 00000796  83 F8 00			cmp eax, 0
 00000799  74 02			je equal
 0000079B  EB 07			jmp end_program

 0000079D			equal:
 0000079D  C6 05 00000016 R		mov escConfirm, 1
	   01

 000007A4			end_program:
					ret
 000007A9			endGame ENDP

				END main
Microsoft (R) Macro Assembler Version 14.42.34435.0	    12/14/24 12:23:03
main.asm						     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00001491 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 000007A9 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetAsyncKeyState . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleOutputCP . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
displayCoinGot . . . . . . . . .	P Near	 0000069F _TEXT	Length= 00000052 Public STDCALL
displayEndData . . . . . . . . .	P Near	 000006F1 _TEXT	Length= 00000048 Public STDCALL
  coin . . . . . . . . . . . . .	L Near	 000006F5 _TEXT	
  time . . . . . . . . . . . . .	L Near	 00000708 _TEXT	
  point  . . . . . . . . . . . .	L Near	 0000071B _TEXT	
displayEndscr  . . . . . . . . .	P Near	 00000435 _TEXT	Length= 0000011C Public STDCALL
  ReadLoop . . . . . . . . . . .	L Near	 0000045A _TEXT	
  Pos1 . . . . . . . . . . . . .	L Near	 000004BC _TEXT	
  Pos2 . . . . . . . . . . . . .	L Near	 000004F8 _TEXT	
  conti  . . . . . . . . . . . .	L Near	 00000532 _TEXT	
  EndDisplay . . . . . . . . . .	L Near	 00000541 _TEXT	
displayGamescr . . . . . . . . .	P Near	 000001E0 _TEXT	Length= 0000008E Public STDCALL
  ReadLoop . . . . . . . . . . .	L Near	 00000205 _TEXT	
  EndDisplay . . . . . . . . . .	L Near	 0000025E _TEXT	
displayInitialscr  . . . . . . .	P Near	 000002AD _TEXT	Length= 0000011C Public STDCALL
  ReadLoop . . . . . . . . . . .	L Near	 000002D2 _TEXT	
  Pos1 . . . . . . . . . . . . .	L Near	 00000334 _TEXT	
  Pos2 . . . . . . . . . . . . .	L Near	 00000370 _TEXT	
  conti  . . . . . . . . . . . .	L Near	 000003AA _TEXT	
  EndDisplay . . . . . . . . . .	L Near	 000003B9 _TEXT	
displayTime  . . . . . . . . . .	P Near	 0000026E _TEXT	Length= 0000003F Public STDCALL
drawPlayer . . . . . . . . . . .	P Near	 000001A5 _TEXT	Length= 0000003B Public STDCALL
endGame  . . . . . . . . . . . .	P Near	 00000783 _TEXT	Length= 00000026 Public STDCALL
  equal  . . . . . . . . . . . .	L Near	 0000079D _TEXT	
  end_program  . . . . . . . . .	L Near	 000007A4 _TEXT	
generateCoins  . . . . . . . . .	P Near	 000005BD _TEXT	Length= 000000E2 Public STDCALL
  Pos1 . . . . . . . . . . . . .	L Near	 000005FF _TEXT	
  Pos2 . . . . . . . . . . . . .	L Near	 00000613 _TEXT	
  Pos3 . . . . . . . . . . . . .	L Near	 00000627 _TEXT	
  Pos4 . . . . . . . . . . . . .	L Near	 0000063B _TEXT	
  output . . . . . . . . . . . .	L Near	 00000659 _TEXT	
getCoin  . . . . . . . . . . . .	P Near	 00000739 _TEXT	Length= 0000004A Public STDCALL
  compareX . . . . . . . . . . .	L Near	 0000073D _TEXT	
  compareY . . . . . . . . . . .	L Near	 0000074C _TEXT	
  equal  . . . . . . . . . . . .	L Near	 0000075B _TEXT	
  not_equal  . . . . . . . . . .	L Near	 00000777 _TEXT	
  end_program  . . . . . . . . .	L Near	 0000077E _TEXT	
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 000000F9 Public STDCALL
  initialLoop  . . . . . . . . .	L Near	 0000000C _TEXT	
  conti  . . . . . . . . . . . .	L Near	 00000026 _TEXT	
  GameLoop . . . . . . . . . . .	L Near	 0000003E _TEXT	
  endLoop  . . . . . . . . . . .	L Near	 0000008A _TEXT	
  Refresh  . . . . . . . . . . .	L Near	 00000095 _TEXT	
  CheckInput . . . . . . . . . .	L Near	 000000AD _TEXT	
  SkipRefresh  . . . . . . . . .	L Near	 000000E1 _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
readInputEndscr  . . . . . . . .	P Near	 00000551 _TEXT	Length= 0000006C Public STDCALL
  confirm  . . . . . . . . . . .	L Near	 00000578 _TEXT	
  checkA . . . . . . . . . . . .	L Near	 00000584 _TEXT	
  checkD . . . . . . . . . . . .	L Near	 0000059E _TEXT	
  no_key_pressed . . . . . . . .	L Near	 000005B8 _TEXT	
readInputInitialscr  . . . . . .	P Near	 000003C9 _TEXT	Length= 0000006C Public STDCALL
  confirm  . . . . . . . . . . .	L Near	 000003F0 _TEXT	
  checkW . . . . . . . . . . . .	L Near	 000003FC _TEXT	
  checkS . . . . . . . . . . . .	L Near	 00000416 _TEXT	
  no_key_pressed . . . . . . . .	L Near	 00000430 _TEXT	
readInput  . . . . . . . . . . .	P Near	 00000140 _TEXT	Length= 00000065 Public STDCALL
  CheckA . . . . . . . . . . . .	L Near	 00000168 _TEXT	
  CheckD . . . . . . . . . . . .	L Near	 0000017C _TEXT	
  CheckESC . . . . . . . . . . .	L Near	 00000190 _TEXT	
  EndInput . . . . . . . . . . .	L Near	 000001A4 _TEXT	
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
updatePhysics  . . . . . . . . .	P Near	 000000F9 _TEXT	Length= 00000047 Public STDCALL
  EndPhysics . . . . . . . . . .	L Near	 0000013D _TEXT	
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
TimerXY  . . . . . . . . . . . .	COORD	 0000002B _DATA	
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
buffer . . . . . . . . . . . . .	Byte	 00000049 _DATA	
bytesWritten . . . . . . . . . .	DWord	 00000005 _DATA	
cellsWritten . . . . . . . . . .	DWord	 00000017 _DATA	
coinAttribute  . . . . . . . . .	Word	 0000147E _DATA	
coinCoord  . . . . . . . . . . .	COORD	 00001478 _DATA	
coinGenerated  . . . . . . . . .	Byte	 0000147C _DATA	
coinGet  . . . . . . . . . . . .	Byte	 00001490 _DATA	
coinGotCoord1  . . . . . . . . .	COORD	 00001488 _DATA	
coinGotCoord2  . . . . . . . . .	COORD	 0000148C _DATA	
coinGot  . . . . . . . . . . . .	DWord	 00001480 _DATA	
coinOutput . . . . . . . . . . .	Byte	 00001484 _DATA	
coinSeed . . . . . . . . . . . .	DWord	 00001474 _DATA	
coinSymbol . . . . . . . . . . .	Byte	 0000147D _DATA	
count  . . . . . . . . . . . . .	DWord	 00000009 _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
elapsedTime  . . . . . . . . . .	DWord	 00000023 _DATA	
endCoinGotCoord  . . . . . . . .	COORD	 0000146C _DATA	
endCoinGot . . . . . . . . . . .	DWord	 00001432 _DATA	
endExitLeftPos . . . . . . . . .	COORD	 00001454 _DATA	
endExitLeftSymbol  . . . . . . .	DWord	 00001458 _DATA	
endExitRightPos  . . . . . . . .	COORD	 00001460 _DATA	
endExitRightSymbol . . . . . . .	DWord	 00001464 _DATA	
endKeyPos  . . . . . . . . . . .	Byte	 00001430 _DATA	
endStartLeftPos  . . . . . . . .	COORD	 0000143C _DATA	
endStartLeftSymbol . . . . . . .	DWord	 00001440 _DATA	
endStartRightPos . . . . . . . .	COORD	 00001448 _DATA	
endStartRightSymbol  . . . . . .	DWord	 0000144C _DATA	
endTimeCoord . . . . . . . . . .	COORD	 00001470 _DATA	
endTime  . . . . . . . . . . . .	DWord	 00001436 _DATA	
endbytesRead . . . . . . . . . .	DWord	 00001428 _DATA	
endconfirm . . . . . . . . . . .	Byte	 00001431 _DATA	
endfilehandle  . . . . . . . . .	DWord	 00001424 _DATA	
endscrBytesWritten . . . . . . .	DWord	 0000142C _DATA	
endscrfile . . . . . . . . . . .	Byte	 00001419 _DATA	
escConfirm . . . . . . . . . . .	Byte	 00000016 _DATA	
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
gamebytesRead  . . . . . . . . .	DWord	 00000041 _DATA	
gamefilehandle . . . . . . . . .	DWord	 0000003D _DATA	
gamescrBytesWritten  . . . . . .	DWord	 00000045 _DATA	
gamescrfile  . . . . . . . . . .	Byte	 0000002F _DATA	
gravity  . . . . . . . . . . . .	Number	 00000001h   
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
groundLevel  . . . . . . . . . .	Word	 00000013 _DATA	
initialExitLeftPos . . . . . . .	COORD	 00001401 _DATA	
initialExitLeftSymbol  . . . . .	DWord	 00001405 _DATA	
initialExitRightPos  . . . . . .	COORD	 0000140D _DATA	
initialExitRightSymbol . . . . .	DWord	 00001411 _DATA	
initialKeyPos  . . . . . . . . .	Byte	 000013E7 _DATA	
initialStartLeftPos  . . . . . .	COORD	 000013E9 _DATA	
initialStartLeftSymbol . . . . .	DWord	 000013ED _DATA	
initialStartRightPos . . . . . .	COORD	 000013F5 _DATA	
initialStartRightSymbol  . . . .	DWord	 000013F9 _DATA	
initialbytesRead . . . . . . . .	DWord	 000013DF _DATA	
initialconfirm . . . . . . . . .	Byte	 000013E8 _DATA	
initialfilehandle  . . . . . . .	DWord	 000013DB _DATA	
initialscrBytesWritten . . . . .	DWord	 000013E3 _DATA	
initialscrfile . . . . . . . . .	Byte	 000013D1 _DATA	
jumpForce  . . . . . . . . . . .	Number	 -00000005h   
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
needsRefresh . . . . . . . . . .	Byte	 0000143A _DATA	
onGround . . . . . . . . . . . .	Byte	 00000015 _DATA	
outputHandle . . . . . . . . . .	DWord	 00000001 _DATA	
playerAttributes . . . . . . . .	Word	 0000001B _DATA	
playerSize . . . . . . . . . . .	Number	 00000001h   
playerXY . . . . . . . . . . . .	COORD	 0000000D _DATA	
player . . . . . . . . . . . . .	Byte	 00000000 _DATA	
prevKeyPos . . . . . . . . . . .	Byte	 0000143B _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
startTime  . . . . . . . . . . .	DWord	 0000001F _DATA	
timeLimit  . . . . . . . . . . .	DWord	 00000027 _DATA	
updateInterval . . . . . . . . .	Word	 0000001D _DATA	
velocityY  . . . . . . . . . . .	Word	 00000011 _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
